---
name: SPDK per-patch summary

on:
  workflow_call:
    inputs:
      client_payload:
        required: false
        type: string
        default: ''
      result:
        required: true
        type: string
        default: 'failure'

jobs:
  merge_outputs:
    # 22.04 used on purpose; it has lcov+gcov versions that are compatible with what
    # is used in cijoe's Fedora 40 images. Using lcov+gcov from ubuntu-latest results
    # in warnings and/or failures.
    runs-on: ubuntu-22.04
    steps:
    - name: Download the SPDK repository
      uses: actions/download-artifact@v4.1.8
      with:
        name: repo-spdk
        path: ./spdk

    - name: Download artifact tarballs
      uses: actions/download-artifact@v4.1.8
      with:
        pattern: 'common-job-*'
        path: ./_autorun_summary

    - name: Untar the SPDK repo
      run: tar xf ./spdk/spdk.tar.gz -C ./spdk

    - name: Leave traces of the test run in the artifacts
      run: |
        summary="./_autorun_summary/github_run_summary"
        echo "SPDK: $(git -C ./spdk show --pretty=format:"%H %s" -s HEAD)" > $summary
        echo "SPDK-CI: ${{ github.sha }}" >> $summary
        echo "GitHub run-id: ${{ github.run_id }}" >> $summary
        cat "$summary" >> $GITHUB_STEP_SUMMARY

    - name: Post process artifacts from jobs
      id: autorun_post
      run: |
        # TODO: either use an official lcov image or create our own
        # TODO: get rid of pandas dependency in spdk/autorun_post.py.
        #       It's ~1GB with all it's dependecies, which is an overkill for
        #       a few table operations.
        sudo apt-get update && sudo apt-get install -y lcov python3-pandas
        ./spdk/autorun_post.py -s -d ./_autorun_summary -r ./spdk
        echo "result=success" >> "$GITHUB_OUTPUT"

    - name: Upload artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v4.4.0
      with:
        name: _autorun_summary
        path: _autorun_summary
    outputs:
      result: ${{ steps.autorun_post.outputs.result }}

  report:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: merge_outputs
    steps:
    - name: Vote count from workflows
      id: vote_count
      run: |
        vote="-1"
        message="Build failed. "

        # Combine results from jobs and autorun_post.py
        if [[ "${{ inputs.result }}" == "success" && \
                "${{ needs.merge_outputs.outputs.result }}" == "success" ]]; then
            vote="1"
            message="Build successful. "
        fi
        # For demonstration purposes, as not to set any actual vote and only comment.
        vote=0
        message+="Results: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        echo "vote=$vote" >> $GITHUB_OUTPUT
        echo "message=$message" >> $GITHUB_OUTPUT
        echo "$message" >> $GITHUB_STEP_SUMMARY

    - name: Report results
      # Only run if it was triggered by Gerrit event, with JSON for it
      if: ${{ inputs.client_payload != '' && fromJson(inputs.client_payload) != '' || false }}
      run: |
        set -e

        change_num="${{ fromJson(inputs.client_payload).change.number }}"
        patch_set="${{ fromJson(inputs.client_payload).patchSet.number }}"

        echo "Gerrit: <https://review.spdk.io/c/spdk/spdk/+/$change_num/$patch_set>" >> $GITHUB_STEP_SUMMARY

        curl -L -X POST https://review.spdk.io/a/changes/$change_num/revisions/$patch_set/review \
        --user "${{ secrets.GERRIT_BOT_USER }}:${{ secrets.GERRIT_BOT_HTTP_PASSWD }}" \
        --header "Content-Type: application/json" \
        --data "{'message': '${{ steps.vote_count.outputs.message }}', 'labels': {'Verified': ${{ steps.vote_count.outputs.vote }}}}" \
        --fail-with-body
